name: Android

on: [push, pull_request]

jobs:
  build:
    name: Build
    runs-on: macos-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    timeout-minutes: 20

    steps:
    - name: Checkout project
      uses: actions/checkout@v2

    - name: Specify node version
      uses: actions/setup-node@v1
      with:
        node-version: 12

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Install node_modules & Deploy
      run: |
        yarn install --frozen-lockfile
        yarn detox build -c android.emu.release

    - name: Persist test app
      uses: actions/upload-artifact@v2
      with:
        name: app_build
        path: android/app/build/

    - uses: actions/cache@v1
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

  test:
    runs-on: macos-latest
    name: Test
    needs: build
    timeout-minutes: 20
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      matrix:
        emu-version: ["system-images;android-18;google_apis;x86", "system-images;android-21;google_apis;x86", "system-images;android-23;default;x86_64", "system-images;android-27;google_apis;x86", "system-images;android-28;google_apis;x86_64", "system-images;android-30;google_apis;x86_64"]

    steps:
    - name: Checkout project
      uses: actions/checkout@v2

    - name: Specify node version
      uses: actions/setup-node@v1
      with:
        node-version: 12

    - name: Use specific Java version for sdkmanager to work
      uses: joschi/setup-jdk@v1
      with:
        java-version: 'openjdk8'
        architecture: 'x64'

    - name: Download Android Emulator Image
      run: |
        echo y | sudo $ANDROID_HOME/tools/bin/sdkmanager --verbose "${{ matrix.emu-version }}"
        $ANDROID_HOME/tools/bin/avdmanager create avd -n emu -k "${{ matrix.emu-version }}" -c 1G -d 7 -f

    - uses: actions/download-artifact@v2

    - name: Prepare downloaded files
      run: mv -f app_build/ android/app/build

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Install node_modules
      run: |
        yarn install --frozen-lockfile

    - name: Android test
      run: |
        export PATH=$PATH:$ANDROID_HOME/platform-tools
        $ANDROID_HOME/emulator/emulator @emu &
        adb wait-for-device; adb shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;'; adb shell wm dismiss-keyguard
        yarn detox test -c android.emu.release --headless
