name: Android

on: [push, pull_request]

jobs:
  build:
    name: Build
    runs-on: macos-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    timeout-minutes: 20

    steps:
    - name: Checkout project
      uses: actions/checkout@v1

    - name: Specify node version
      uses: actions/setup-node@v1
      with:
        node-version: 12

    - name: Install node_modules & Deploy
      run: |
        yarn install --frozen-lockfile
        yarn detox build -c android.emu.release

    - name: Persist test app
      uses: actions/upload-artifact@v2
      with:
        name: app
        path: android/app/build/outputs/apk/release/app-release.apk

  test:
    runs-on: macos-latest
    name: Test
    needs: build
    timeout-minutes: 60
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      matrix:
        emu-version: ["system-images;android-28;google_apis_playstore;x86"]

    steps:
    - name: Checkout project
      uses: actions/checkout@v1

    - name: Specify node version
      uses: actions/setup-node@v1
      with:
        node-version: 12

    - name: Use specific Java version for sdkmanager to work
      uses: joschi/setup-jdk@v1
      with:
        java-version: 'openjdk8'
        architecture: 'x64'

    - name: Download Android Emulator Image
      run: |
        echo y | sudo $ANDROID_HOME/tools/bin/sdkmanager --verbose ${{ matrix.emu-version }}
        $ANDROID_HOME/tools/bin/avdmanager create avd -n emu -k ${{ matrix.emu-version }} -b "x86" -c 1G -d 7 -f

    - name: Create dir
      run: mkdir -p android/app/build/outputs/apk/release/

    - uses: actions/download-artifact@v2
      with:
        name: app
        path: android/app/build/outputs/apk/release/

    - name: Display structure of downloaded files
      run: ls -R && unzip android/app/build/outputs/apk/release/app.zip
      working-directory: path/to/artifact

    - name: Install node_modules
      run: |
        yarn install --frozen-lockfile

    - name: Android test
      timeout-minutes: 10
      run: |
        export PATH=$PATH:$ANDROID_HOME/platform-tools
        $ANDROID_HOME/emulator/emulator @emu &
        adb wait-for-device; adb shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done;'; adb shell wm dismiss-keyguard
        yarn detox test -c android.emu.release
